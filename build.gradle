plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.3"
    id("io.micronaut.aot") version "4.3.3"
}


version = "0.1"
group = "com.larseckart"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-management")
    implementation 'io.micronaut.tracing:micronaut-tracing-core:6.4.1'
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("org.yaml:snakeyaml")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation 'io.micronaut.validation:micronaut-validation:4.4.1'
    implementation("io.opentelemetry:opentelemetry-exporter-otlp:1.35.0")

    implementation 'io.lettuce:lettuce-core:6.3.1.RELEASE'
    implementation('io.honeycomb:honeycomb-opentelemetry-sdk:1.5.2')


    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("io.micronaut.test:micronaut-test-rest-assured")
    testImplementation("org.junit.platform:junit-platform-suite-engine")


    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    testImplementation 'org.testcontainers:testcontainers:1.19.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.6'
    testImplementation 'org.testcontainers:postgresql:1.19.6'
    testImplementation "com.redis:testcontainers-redis:2.1.0"
    testImplementation 'net.java.dev.jna:jna:5.14.0'
    testImplementation('com.approvaltests:approvaltests:22.4.0')
}



application {
    mainClass.set("com.larseckart.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.larseckart.*")
        annotations("micro.*")
    }
}

task stage(type: Copy, dependsOn: [assemble]) {
    from 'build/libs'
    include 'micronaut-*-all.jar'
    into project.rootDir
    rename {
        'micronaut.jar'
    }
}
stage.mustRunAfter(clean)

clean {
    doLast {
        project.file('micronaut.jar').delete()
    }
}
