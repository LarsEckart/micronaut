buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.20"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
    }
}

version "0.1"
group "example"

apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "java"
apply plugin: "net.ltgt.apt-eclipse"
apply plugin: "net.ltgt.apt-idea"
apply plugin: "com.github.ben-manes.versions"

repositories {
    maven {
        url "https://dl.bintray.com/micronaut/core-releases-local"
        //content {
        //    includeGroupByRegex "io\\.micronaut.*"
        //}
    }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.4'
    }
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-inject-java'
    annotationProcessor 'io.micronaut:micronaut-validation'
    annotationProcessor 'io.micronaut.configuration:micronaut-openapi'
    compileOnly 'io.micronaut:micronaut-inject-java'
    compile 'io.micronaut:micronaut-http-client'
    compile 'io.micronaut:micronaut-http-server-netty'
    compile 'io.micronaut:micronaut-inject'
    compile 'io.micronaut:micronaut-runtime'
    compile 'io.micronaut:micronaut-management'
    compile 'io.micronaut.configuration:micronaut-hibernate-validator'

    compile "io.swagger.core.v3:swagger-annotations:2.0.6"
    runtime "ch.qos.logback:logback-classic:1.2.3"

    testCompile 'io.micronaut:micronaut-inject-java'
    testCompile 'io.micronaut.test:micronaut-test-junit5:1.0.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile 'org.mockito:mockito-junit-jupiter:2.23.4'
    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'io.rest-assured:rest-assured:3.2.0'
}

shadowJar {
    mergeServiceFiles()
}

test {
    useJUnitPlatform()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "micro.Application"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

task stage(type: Copy, dependsOn: [clean, assemble]) {
    from 'build/libs/micronaut-0.1-all.jar'
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean {
    doLast {
        project.file('app.jar').delete()
    }
}
